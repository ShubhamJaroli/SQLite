{"version":3,"sources":["CardStack.tsx"],"names":["React","Animated","View","StyleSheet","Dimensions","Platform","ScreenContainer","Screen","screensEnabled","getDefaultHeaderHeight","CardContainer","DefaultTransition","ModalTransition","forNoAnimation","forNoAnimationHeader","forNoAnimationCard","getDistanceForDirection","EPSILON","FAR_FAR_AWAY","dimensions","get","layout","width","height","MaybeScreenContainer","enabled","style","rest","OS","overflow","MaybeScreen","active","transform","translateY","interpolate","inputRange","outputRange","FALLBACK_DESCRIPTOR","Object","freeze","options","getHeaderHeights","routes","insets","descriptors","previous","reduce","acc","curr","key","flatten","headerStyle","safeAreaInsets","headerStatusBarHeight","top","getDistanceFromOptions","mode","descriptor","gestureDirection","getProgressFromGesture","gesture","distance","CardStack","state","scenes","gestures","props","headerHeights","handleLayout","e","nativeEvent","setState","handleHeaderLayout","route","previousHeight","closingRouteKeys","onOpenRoute","onCloseRoute","getPreviousRoute","getGesturesEnabled","renderHeader","renderScene","headerMode","onTransitionStart","onTransitionEnd","onPageChangeStart","onPageChangeConfirm","onPageChangeCancel","focusedRoute","index","focusedDescriptor","focusedOptions","defaultTransitionPreset","headerStyleInterpolator","right","bottom","left","isScreensEnabled","styles","container","map","self","focused","scene","isScreenActive","length","progress","next","extrapolate","headerShown","headerTransparent","cardShadowEnabled","cardOverlayEnabled","cardStyle","animationEnabled","gestureResponseDistance","gestureVelocityImpact","transitionSpec","cardStyleInterpolator","transitionConfig","nextScene","safeAreaInsetTop","safeAreaInsetRight","safeAreaInsetBottom","safeAreaInsetLeft","absoluteFill","includes","onContentHeightChange","undefined","styleInterpolator","floating","Value","openingRouteKeys","previousRoute","nextRoute","oldScene","currentGesture","previousGesture","nextGesture","nextDescriptor","previousDescriptor","current","__memo","every","it","i","Component","create","flex","position"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  Animated,\n  View,\n  StyleSheet,\n  LayoutChangeEvent,\n  Dimensions,\n  Platform,\n  ViewProps,\n} from 'react-native';\nimport { EdgeInsets } from 'react-native-safe-area-context';\n// eslint-disable-next-line import/no-unresolved\nimport { ScreenContainer, Screen, screensEnabled } from 'react-native-screens'; // Import with * as to prevent getters being called\nimport { NavigationState as StackNavigationState } from 'react-navigation';\n\nimport { getDefaultHeaderHeight } from '../Header/HeaderSegment';\nimport { Props as HeaderContainerProps } from '../Header/HeaderContainer';\nimport CardContainer from './CardContainer';\nimport {\n  DefaultTransition,\n  ModalTransition,\n} from '../../TransitionConfigs/TransitionPresets';\nimport { forNoAnimation as forNoAnimationHeader } from '../../TransitionConfigs/HeaderStyleInterpolators';\nimport { forNoAnimation as forNoAnimationCard } from '../../TransitionConfigs/CardStyleInterpolators';\nimport getDistanceForDirection from '../../utils/getDistanceForDirection';\nimport {\n  Route,\n  Layout,\n  StackHeaderMode,\n  StackCardMode,\n  Scene,\n  StackDescriptorMap,\n  StackNavigationOptions,\n  StackDescriptor,\n} from '../../types';\n\ntype GestureValues = {\n  [key: string]: Animated.Value;\n};\n\ntype Props = {\n  mode: StackCardMode;\n  insets: EdgeInsets;\n  state: StackNavigationState;\n  descriptors: StackDescriptorMap;\n  routes: Route<string>[];\n  openingRouteKeys: string[];\n  closingRouteKeys: string[];\n  onOpenRoute: (props: { route: Route<string> }) => void;\n  onCloseRoute: (props: { route: Route<string> }) => void;\n  getPreviousRoute: (props: {\n    route: Route<string>;\n  }) => Route<string> | undefined;\n  getGesturesEnabled: (props: { route: Route<string> }) => boolean;\n  renderHeader: (props: HeaderContainerProps) => React.ReactNode;\n  renderScene: (props: { route: Route<string> }) => React.ReactNode;\n  headerMode: StackHeaderMode;\n  onTransitionStart: (\n    props: { route: Route<string> },\n    closing: boolean\n  ) => void;\n  onTransitionEnd: (props: { route: Route<string> }, closing: boolean) => void;\n  onPageChangeStart?: () => void;\n  onPageChangeConfirm?: () => void;\n  onPageChangeCancel?: () => void;\n};\n\ntype State = {\n  routes: Route<string>[];\n  descriptors: StackDescriptorMap;\n  scenes: Scene<Route<string>>[];\n  gestures: GestureValues;\n  layout: Layout;\n  headerHeights: Record<string, number>;\n};\n\nconst EPSILON = 1e-5;\nconst FAR_FAR_AWAY = 9000;\n\nconst dimensions = Dimensions.get('window');\nconst layout = { width: dimensions.width, height: dimensions.height };\n\nconst MaybeScreenContainer = ({\n  enabled,\n  style,\n  ...rest\n}: ViewProps & {\n  enabled: boolean;\n  children: React.ReactNode;\n}) => {\n  if (enabled && screensEnabled()) {\n    return <ScreenContainer style={style} {...rest} />;\n  }\n\n  return (\n    <View\n      collapsable={!enabled}\n      removeClippedSubviews={Platform.OS !== 'ios' && enabled}\n      style={[style, { overflow: 'hidden' }] as any}\n      {...rest}\n    />\n  );\n};\n\nconst MaybeScreen = ({\n  enabled,\n  active,\n  style,\n  ...rest\n}: ViewProps & {\n  enabled: boolean;\n  active: number | Animated.AnimatedInterpolation;\n  children: React.ReactNode;\n}) => {\n  if (enabled && screensEnabled()) {\n    // @ts-ignore\n    return <Screen active={active} style={style} {...rest} />;\n  }\n\n  return (\n    <Animated.View\n      style={[\n        style,\n        {\n          overflow: 'hidden',\n          // Position the screen offscreen to take advantage of offscreen perf optimization\n          // https://facebook.github.io/react-native/docs/view#removeclippedsubviews\n          // This can be useful if screens is not enabled\n          // It's buggy on iOS, so we don't enable it there\n          transform: [\n            {\n              translateY:\n                Platform.OS !== 'ios' && enabled\n                  ? typeof active === 'number'\n                    ? active\n                      ? 0\n                      : FAR_FAR_AWAY\n                    : active.interpolate({\n                        inputRange: [0, 1],\n                        outputRange: [FAR_FAR_AWAY, 0],\n                      })\n                  : 0,\n            },\n          ],\n        },\n      ]}\n      {...rest}\n    />\n  );\n};\n\nconst FALLBACK_DESCRIPTOR = Object.freeze({ options: {} });\n\nconst getHeaderHeights = (\n  routes: Route<string>[],\n  insets: EdgeInsets,\n  descriptors: StackDescriptorMap,\n  layout: Layout,\n  previous: Record<string, number>\n) => {\n  return routes.reduce<Record<string, number>>((acc, curr) => {\n    const { options = {} } = descriptors[curr.key] || {};\n    const { height = previous[curr.key] } = StyleSheet.flatten(\n      options.headerStyle || {}\n    );\n\n    const safeAreaInsets = {\n      ...insets,\n      ...options.safeAreaInsets,\n    };\n\n    const { headerStatusBarHeight = safeAreaInsets.top } = options;\n\n    acc[curr.key] =\n      typeof height === 'number'\n        ? height\n        : getDefaultHeaderHeight(layout, headerStatusBarHeight);\n\n    return acc;\n  }, {});\n};\n\nconst getDistanceFromOptions = (\n  mode: StackCardMode,\n  layout: Layout,\n  descriptor?: StackDescriptor\n) => {\n  const {\n    gestureDirection = mode === 'modal'\n      ? ModalTransition.gestureDirection\n      : DefaultTransition.gestureDirection,\n  } = descriptor?.options || {};\n\n  return getDistanceForDirection(layout, gestureDirection);\n};\n\nconst getProgressFromGesture = (\n  mode: StackCardMode,\n  gesture: Animated.Value,\n  layout: Layout,\n  descriptor?: StackDescriptor\n) => {\n  const distance = getDistanceFromOptions(mode, layout, descriptor);\n\n  if (distance > 0) {\n    return gesture.interpolate({\n      inputRange: [0, distance],\n      outputRange: [1, 0],\n    });\n  }\n\n  return gesture.interpolate({\n    inputRange: [distance, 0],\n    outputRange: [0, 1],\n  });\n};\n\nexport default class CardStack extends React.Component<Props, State> {\n  static getDerivedStateFromProps(props: Props, state: State) {\n    if (\n      props.routes === state.routes &&\n      props.descriptors === state.descriptors\n    ) {\n      return null;\n    }\n\n    const gestures = props.routes.reduce<GestureValues>((acc, curr) => {\n      const descriptor = props.descriptors[curr.key];\n      const { animationEnabled } = descriptor?.options || {};\n\n      acc[curr.key] =\n        state.gestures[curr.key] ||\n        new Animated.Value(\n          props.openingRouteKeys.includes(curr.key) &&\n          animationEnabled !== false\n            ? getDistanceFromOptions(props.mode, state.layout, descriptor)\n            : 0\n        );\n\n      return acc;\n    }, {});\n\n    return {\n      routes: props.routes,\n      scenes: props.routes.map((route, index, self) => {\n        const previousRoute = self[index - 1];\n        const nextRoute = self[index + 1];\n\n        const oldScene = state.scenes[index];\n\n        const currentGesture = gestures[route.key];\n        const previousGesture = previousRoute\n          ? gestures[previousRoute.key]\n          : undefined;\n        const nextGesture = nextRoute ? gestures[nextRoute.key] : undefined;\n\n        const descriptor =\n          props.descriptors[route.key] ||\n          state.descriptors[route.key] ||\n          (oldScene ? oldScene.descriptor : FALLBACK_DESCRIPTOR);\n\n        const nextDescriptor =\n          props.descriptors[nextRoute?.key] ||\n          state.descriptors[nextRoute?.key];\n\n        const previousDescriptor =\n          props.descriptors[previousRoute?.key] ||\n          state.descriptors[previousRoute?.key];\n\n        const scene = {\n          route,\n          descriptor,\n          progress: {\n            current: getProgressFromGesture(\n              props.mode,\n              currentGesture,\n              state.layout,\n              descriptor\n            ),\n            next: nextGesture\n              ? getProgressFromGesture(\n                  props.mode,\n                  nextGesture,\n                  state.layout,\n                  nextDescriptor\n                )\n              : undefined,\n            previous: previousGesture\n              ? getProgressFromGesture(\n                  props.mode,\n                  previousGesture,\n                  state.layout,\n                  previousDescriptor\n                )\n              : undefined,\n          },\n          __memo: [\n            route,\n            state.layout,\n            descriptor,\n            nextDescriptor,\n            previousDescriptor,\n            currentGesture,\n            nextGesture,\n            previousGesture,\n          ],\n        };\n\n        if (\n          oldScene &&\n          scene.__memo.every((it, i) => {\n            // @ts-ignore\n            return oldScene.__memo[i] === it;\n          })\n        ) {\n          return oldScene;\n        }\n\n        return scene;\n      }),\n      gestures,\n      descriptors: props.descriptors,\n      headerHeights: getHeaderHeights(\n        props.routes,\n        props.insets,\n        state.descriptors,\n        state.layout,\n        state.headerHeights\n      ),\n    };\n  }\n\n  state: State = {\n    routes: [],\n    scenes: [],\n    gestures: {},\n    layout,\n    descriptors: this.props.descriptors,\n    // Used when card's header is null and mode is float to make transition\n    // between screens with headers and those without headers smooth.\n    // This is not a great heuristic here. We don't know synchronously\n    // on mount what the header height is so we have just used the most\n    // common cases here.\n    headerHeights: {},\n  };\n\n  private handleLayout = (e: LayoutChangeEvent) => {\n    const { height, width } = e.nativeEvent.layout;\n\n    const layout = { width, height };\n\n    this.setState((state, props) => {\n      if (height === state.layout.height && width === state.layout.width) {\n        return null;\n      }\n\n      return {\n        layout,\n        headerHeights: getHeaderHeights(\n          props.routes,\n          props.insets,\n          state.descriptors,\n          layout,\n          {}\n        ),\n      };\n    });\n  };\n\n  private handleHeaderLayout = ({\n    route,\n    height,\n  }: {\n    route: Route<string>;\n    height: number;\n  }) => {\n    this.setState(({ headerHeights }) => {\n      const previousHeight = headerHeights[route.key];\n\n      if (previousHeight === height) {\n        return null;\n      }\n\n      return {\n        headerHeights: {\n          ...headerHeights,\n          [route.key]: height,\n        },\n      };\n    });\n  };\n\n  render() {\n    const {\n      mode,\n      insets,\n      descriptors,\n      state,\n      routes,\n      closingRouteKeys,\n      onOpenRoute,\n      onCloseRoute,\n      getPreviousRoute,\n      getGesturesEnabled,\n      renderHeader,\n      renderScene,\n      headerMode,\n      onTransitionStart,\n      onTransitionEnd,\n      onPageChangeStart,\n      onPageChangeConfirm,\n      onPageChangeCancel,\n    } = this.props;\n\n    const { scenes, layout, gestures, headerHeights } = this.state;\n\n    const focusedRoute = state.routes[state.index];\n    const focusedDescriptor = descriptors[focusedRoute.key];\n    const focusedOptions = focusedDescriptor ? focusedDescriptor.options : {};\n\n    let defaultTransitionPreset =\n      mode === 'modal' ? ModalTransition : DefaultTransition;\n\n    if (headerMode === 'screen') {\n      defaultTransitionPreset = {\n        ...defaultTransitionPreset,\n        headerStyleInterpolator: forNoAnimationHeader,\n      };\n    }\n\n    const {\n      top = insets.top,\n      right = insets.right,\n      bottom = insets.bottom,\n      left = insets.left,\n    } = focusedOptions.safeAreaInsets || {};\n\n    // Screens is buggy on iOS, so we don't enable it there\n    // For modals, usually we want the screen underneath to be visible, so also disable it there\n    const isScreensEnabled = Platform.OS !== 'ios' && mode !== 'modal';\n\n    return (\n      <React.Fragment>\n        <MaybeScreenContainer\n          enabled={isScreensEnabled}\n          style={styles.container}\n          onLayout={this.handleLayout}\n        >\n          {routes.map((route, index, self) => {\n            const focused = focusedRoute.key === route.key;\n            const gesture = gestures[route.key];\n            const scene = scenes[index];\n\n            // Display current screen and a screen beneath.\n            // On Android screen beneath is hidden on animation finished bs of RNS's issue.\n            const isScreenActive =\n              index === self.length - 1\n                ? 1\n                : Platform.OS === 'android'\n                ? scene.progress.next\n                  ? scene.progress.next.interpolate({\n                      inputRange: [0, 1 - EPSILON, 1],\n                      outputRange: [1, 1, 0],\n                      extrapolate: 'clamp',\n                    })\n                  : 1\n                : index === self.length - 2\n                ? 1\n                : 0;\n\n            const {\n              safeAreaInsets,\n              headerShown,\n              headerTransparent,\n              cardShadowEnabled,\n              cardOverlayEnabled,\n              cardStyle,\n              animationEnabled,\n              gestureResponseDistance,\n              gestureVelocityImpact,\n              gestureDirection = defaultTransitionPreset.gestureDirection,\n              transitionSpec = defaultTransitionPreset.transitionSpec,\n              cardStyleInterpolator = animationEnabled === false\n                ? forNoAnimationCard\n                : defaultTransitionPreset.cardStyleInterpolator,\n              headerStyleInterpolator = defaultTransitionPreset.headerStyleInterpolator,\n            } = scene.descriptor\n              ? scene.descriptor.options\n              : ({} as StackNavigationOptions);\n\n            let transitionConfig = {\n              gestureDirection,\n              transitionSpec,\n              cardStyleInterpolator,\n              headerStyleInterpolator,\n            };\n\n            // When a screen is not the last, it should use next screen's transition config\n            // Many transitions also animate the previous screen, so using 2 different transitions doesn't look right\n            // For example combining a slide and a modal transition would look wrong otherwise\n            // With this approach, combining different transition styles in the same navigator mostly looks right\n            // This will still be broken when 2 transitions have different idle state (e.g. modal presentation),\n            // but majority of the transitions look alright\n            if (index !== self.length - 1) {\n              const nextScene = scenes[index + 1];\n\n              if (nextScene) {\n                const {\n                  animationEnabled,\n                  gestureDirection = defaultTransitionPreset.gestureDirection,\n                  transitionSpec = defaultTransitionPreset.transitionSpec,\n                  cardStyleInterpolator = animationEnabled === false\n                    ? forNoAnimationCard\n                    : defaultTransitionPreset.cardStyleInterpolator,\n                  headerStyleInterpolator = defaultTransitionPreset.headerStyleInterpolator,\n                } = nextScene.descriptor\n                  ? nextScene.descriptor.options\n                  : ({} as StackNavigationOptions);\n\n                transitionConfig = {\n                  gestureDirection,\n                  transitionSpec,\n                  cardStyleInterpolator,\n                  headerStyleInterpolator,\n                };\n              }\n            }\n\n            const {\n              top: safeAreaInsetTop = insets.top,\n              right: safeAreaInsetRight = insets.right,\n              bottom: safeAreaInsetBottom = insets.bottom,\n              left: safeAreaInsetLeft = insets.left,\n            } = safeAreaInsets || {};\n\n            return (\n              <MaybeScreen\n                key={route.key}\n                style={StyleSheet.absoluteFill}\n                enabled={isScreensEnabled}\n                active={isScreenActive}\n                pointerEvents=\"box-none\"\n              >\n                <CardContainer\n                  index={index}\n                  active={index === self.length - 1}\n                  focused={focused}\n                  closing={closingRouteKeys.includes(route.key)}\n                  layout={layout}\n                  gesture={gesture}\n                  scene={scene}\n                  previousScene={scenes[index - 1]}\n                  state={state}\n                  safeAreaInsetTop={safeAreaInsetTop}\n                  safeAreaInsetRight={safeAreaInsetRight}\n                  safeAreaInsetBottom={safeAreaInsetBottom}\n                  safeAreaInsetLeft={safeAreaInsetLeft}\n                  cardOverlayEnabled={cardOverlayEnabled}\n                  cardShadowEnabled={cardShadowEnabled}\n                  cardStyle={cardStyle}\n                  onPageChangeStart={onPageChangeStart}\n                  onPageChangeConfirm={onPageChangeConfirm}\n                  onPageChangeCancel={onPageChangeCancel}\n                  gestureResponseDistance={gestureResponseDistance}\n                  headerHeight={headerHeights[route.key]}\n                  onHeaderHeightChange={this.handleHeaderLayout}\n                  getPreviousRoute={getPreviousRoute}\n                  headerMode={headerMode}\n                  headerShown={headerShown}\n                  headerTransparent={headerTransparent}\n                  renderHeader={renderHeader}\n                  renderScene={renderScene}\n                  onOpenRoute={onOpenRoute}\n                  onCloseRoute={onCloseRoute}\n                  onTransitionStart={onTransitionStart}\n                  onTransitionEnd={onTransitionEnd}\n                  gestureEnabled={index !== 0 && getGesturesEnabled({ route })}\n                  gestureVelocityImpact={gestureVelocityImpact}\n                  {...transitionConfig}\n                />\n              </MaybeScreen>\n            );\n          })}\n        </MaybeScreenContainer>\n        {headerMode === 'float'\n          ? renderHeader({\n              mode: 'float',\n              layout,\n              insets: { top, right, bottom, left },\n              scenes,\n              state,\n              getPreviousRoute,\n              onContentHeightChange: this.handleHeaderLayout,\n              gestureDirection:\n                focusedOptions.gestureDirection !== undefined\n                  ? focusedOptions.gestureDirection\n                  : defaultTransitionPreset.gestureDirection,\n              styleInterpolator:\n                focusedOptions.headerStyleInterpolator !== undefined\n                  ? focusedOptions.headerStyleInterpolator\n                  : defaultTransitionPreset.headerStyleInterpolator,\n              style: styles.floating,\n            })\n          : null}\n      </React.Fragment>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    overflow: 'hidden',\n  },\n  floating: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n  },\n});\n"]}